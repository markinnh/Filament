<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:core="clr-namespace:System;assembly=mscorlib"
                    xmlns:dd="clr-namespace:DataDefinitions;assembly=DataDefinitions"
                    xmlns:model="clr-namespace:DataDefinitions.Models;assembly=DataDefinitions"
                    xmlns:helpers="clr-namespace:Filament.WPF6.Helpers"
                    xmlns:local="clr-namespace:Filament.WPF6"
                    xmlns:rsrc="clr-namespace:Filament.WPF6.Properties" 
                    xmlns:vm="clr-namespace:Filament.WPF6.ViewModels"
                    xmlns:filtr="clr-namespace:DataDefinitions.Filters;assembly=DataDefinitions"
                    >

    <SolidColorBrush x:Key="StandardBackground" Color="WhiteSmoke"/>
    <core:Double x:Key="StdFontSize">14</core:Double>
    <core:Double x:Key="StdTextBoxHeight">26</core:Double>
    <core:Double x:Key="TitleSize">32</core:Double>
    <core:String x:Key="EditIconSymbol">&#xE104;</core:String>
    <core:String x:Key="CheckSymbol">&#xE10B;</core:String>
    <core:String x:Key="CalculatorSymbol">&#xE1D0;</core:String>
    <core:String x:Key="SaveSymbol">&#xE105;</core:String>
    <core:String x:Key="DiscardSymbol">&#xE107;</core:String>
    <core:String x:Key="RefreshSymbol">&#xE117;</core:String>
    <core:String x:Key="AddSymbol">&#xE109;</core:String>
    <core:String x:Key="NoSymbol">&#xE10A;</core:String>
    <core:String x:Key="UndoSymbol">&#xE10E;</core:String>
    <core:String x:Key="SettingsSymbol">&#xE115;</core:String>
    <core:String x:Key="ListSymbol">&#xE14C;</core:String>
    <core:String x:Key="StandardBackgroundColor">Goldenrod</core:String>
    <core:Double x:Key="cls-1">0.75</core:Double>
    <core:String x:Key="FilamentPathData">M0,0 H16 M3,1.6 H13 M3,3 H13 M3,4.6 H13 M3,6 H13 M3,7.6 H13 M3,9 H11.6 M0,10.5 H10 M12,10.5 H16 M11,9.5 V16</core:String>
    <Image x:Key="ShelfImage" Source="shelf.png"/>
    <Style x:Key="StandardControl" TargetType="Control">
        <Setter Property="Background" Value="GhostWhite"/>
    </Style>
    

    <Geometry x:Key="FilamentGeometry" >m 35.743449 41.500156 c -0.132537 -0.05741 -0.27021 -0.183225 -0.341593 -0.312171 -0.04723 -0.08532 -0.05387 -0.351293 -0.06809 -2.725993 l -0.01576 -2.63145 -4.593219 -0.008 -4.593219 -0.008 v -0.472609 -0.472611 h 1.032928 1.032928 l -0.01183 -0.124021 c -0.02484 -0.260513 0.109699 -0.495371 0.353334 -0.616779 l 0.157676 -0.07857 3.200398 4.76e-4 c 3.547214 4.77e-4 3.408453 -0.007 3.81716 0.207734 0.413664 0.217376 0.755075 0.659803 0.863235 1.118653 0.06888 0.292213 0.07248 5.604125 0.0039 5.768239 -0.134186 0.321151 -0.529459 0.488666 -0.837862 0.355083 z m 1.827833 -5.84017 c 0 -0.477022 -0.246081 -1.146744 -0.557226 -1.516519 l -0.07866 -0.09349 h 1.383245 1.383247 l 0.157676 0.07857 c 0.243634 0.121408 0.378177 0.356266 0.353333 0.616779 l -0.01183 0.124021 h 1.032928 1.032929 v 0.472716 0.472715 h -2.34782 -2.34782 z M 28.52588 33.222728 c -0.395611 -0.200094 -0.46074 -0.741033 -0.125667 -1.043751 0.06709 -0.06061 0.17617 -0.125253 0.242395 -0.143644 0.168665 -0.04684 10.944609 -0.04684 11.113274 0 0.06623 0.01839 0.175303 0.08303 0.242396 0.143644 0.335073 0.302718 0.269944 0.843657 -0.125668 1.043751 l -0.140191 0.07091 h -5.533174 -5.533173 z m 0.11828 -1.987827 c -0.557661 -0.173461 -0.627692 -0.925274 -0.110877 -1.190312 0.113624 -0.05827 0.273508 -0.05996 5.665962 -0.05996 5.392455 0 5.552338 0.0017 5.665963 0.05996 0.527164 0.270346 0.43751 1.053117 -0.137193 1.197829 -0.201225 0.05067 -10.920166 0.0434 -11.083855 -0.0075 z m -0.0705 -2.065393 c -0.492879 -0.22391 -0.52243 -0.910534 -0.04992 -1.159987 l 0.138893 -0.07333 h 5.536614 5.536615 l 0.138893 0.07333 c 0.472506 0.249453 0.442956 0.936077 -0.04992 1.159987 -0.120645 0.05481 -0.373709 0.05739 -5.625585 0.05739 -5.251876 0 -5.504939 -0.0026 -5.625584 -0.05739 z m -0.04992 -2.062985 c -0.07639 -0.04033 -0.181437 -0.133703 -0.233436 -0.207496 -0.08127 -0.115336 -0.09454 -0.162537 -0.09454 -0.336277 v -0.202108 l -1.032096 -8.4e-5 -1.032095 -8.2e-5 V 25.88776 25.415045 h 8.067677 8.067678 v 0.472715 0.472716 l -1.032096 8.1e-5 -1.032095 8.2e-5 v 0.202109 c 0 0.173741 -0.01327 0.22094 -0.09454 0.336278 -0.052 0.07379 -0.157045 0.167165 -0.233436 0.207494 l -0.138893 0.07333 h -5.536615 -5.536614 z</Geometry>
    <Geometry x:Key="ShelfGlyph">M0,0 V16 H1 V0 M2,4 H14 M2,9 H14 M2,14 H14 M15,0 V16 H16 V0 M3,2.5 H7 M3,1.5 H6 M3,7.5 H7 M3,6.5 H6 M9,7.5 H13 M10,6.5 H13 M3,12.5 H7 M3,11.5 H6 M9,12.5 H13 M10,11.5 H13</Geometry>
 <Path x:Key="TestPath"
          Data=""/>   
    <!--<Image x:Key="FilamentGlyph" Width="16" Height="16" >
        <Image.Source>
            <DrawingImage>
                <DrawingImage.Drawing>
                    <GeometryDrawing Brush="Black" Geometry="m 35.743449 41.500156 c -0.132537 -0.05741 -0.27021 -0.183225 -0.341593 -0.312171 -0.04723 -0.08532 -0.05387 -0.351293 -0.06809 -2.725993 l -0.01576 -2.63145 -4.593219 -0.008 -4.593219 -0.008 v -0.472609 -0.472611 h 1.032928 1.032928 l -0.01183 -0.124021 c -0.02484 -0.260513 0.109699 -0.495371 0.353334 -0.616779 l 0.157676 -0.07857 3.200398 4.76e-4 c 3.547214 4.77e-4 3.408453 -0.007 3.81716 0.207734 0.413664 0.217376 0.755075 0.659803 0.863235 1.118653 0.06888 0.292213 0.07248 5.604125 0.0039 5.768239 -0.134186 0.321151 -0.529459 0.488666 -0.837862 0.355083 z m 1.827833 -5.84017 c 0 -0.477022 -0.246081 -1.146744 -0.557226 -1.516519 l -0.07866 -0.09349 h 1.383245 1.383247 l 0.157676 0.07857 c 0.243634 0.121408 0.378177 0.356266 0.353333 0.616779 l -0.01183 0.124021 h 1.032928 1.032929 v 0.472716 0.472715 h -2.34782 -2.34782 z M 28.52588 33.222728 c -0.395611 -0.200094 -0.46074 -0.741033 -0.125667 -1.043751 0.06709 -0.06061 0.17617 -0.125253 0.242395 -0.143644 0.168665 -0.04684 10.944609 -0.04684 11.113274 0 0.06623 0.01839 0.175303 0.08303 0.242396 0.143644 0.335073 0.302718 0.269944 0.843657 -0.125668 1.043751 l -0.140191 0.07091 h -5.533174 -5.533173 z m 0.11828 -1.987827 c -0.557661 -0.173461 -0.627692 -0.925274 -0.110877 -1.190312 0.113624 -0.05827 0.273508 -0.05996 5.665962 -0.05996 5.392455 0 5.552338 0.0017 5.665963 0.05996 0.527164 0.270346 0.43751 1.053117 -0.137193 1.197829 -0.201225 0.05067 -10.920166 0.0434 -11.083855 -0.0075 z m -0.0705 -2.065393 c -0.492879 -0.22391 -0.52243 -0.910534 -0.04992 -1.159987 l 0.138893 -0.07333 h 5.536614 5.536615 l 0.138893 0.07333 c 0.472506 0.249453 0.442956 0.936077 -0.04992 1.159987 -0.120645 0.05481 -0.373709 0.05739 -5.625585 0.05739 -5.251876 0 -5.504939 -0.0026 -5.625584 -0.05739 z m -0.04992 -2.062985 c -0.07639 -0.04033 -0.181437 -0.133703 -0.233436 -0.207496 -0.08127 -0.115336 -0.09454 -0.162537 -0.09454 -0.336277 v -0.202108 l -1.032096 -8.4e-5 -1.032095 -8.2e-5 V 25.88776 25.415045 h 8.067677 8.067678 v 0.472715 0.472716 l -1.032096 8.1e-5 -1.032095 8.2e-5 v 0.202109 c 0 0.173741 -0.01327 0.22094 -0.09454 0.336278 -0.052 0.07379 -0.157045 0.167165 -0.233436 0.207494 l -0.138893 0.07333 h -5.536615 -5.536614 z"/>
                </DrawingImage.Drawing>
            </DrawingImage>
        </Image.Source>
    </Image>-->

    <ObjectDataProvider x:Key="dataFromMaterialType" MethodName="GetValues"
                            ObjectType="{x:Type core:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="dd:MaterialType"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="dataFromSupportedWeight" MethodName="GetValues"
                            ObjectType="{x:Type core:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="dd:SupportedWeight"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="dataFromSupportedLength" MethodName="GetValues"
                            ObjectType="{x:Type core:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="dd:SupportedLength"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="dataFromDensityEditType" MethodName="GetValues"
                            ObjectType="{x:Type core:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="model:DensityType"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ObjectDataProvider x:Key="DataFromShowAllFlag" MethodName="GetValues"
                        ObjectType="{x:Type core:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="helpers:ShowAllFlag"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ObjectDataProvider x:Key="DataFromInventoryDisplayStyle" MethodName="GetValues"
                        ObjectType="{x:Type core:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="vm:InventoryDisplayStyle"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="DataFromWhichCompare" MethodName="GetValues"
                        ObjectType="{x:Type core:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="filtr:WhichCompare"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="DataFromSupportedSettingValueType" MethodName="GetValues"
                        ObjectType="{x:Type core:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="model:SupportedSettingValueType"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <x:Array x:Key="FilamentDiameters" Type="core:Double">
        <core:Double>1.75</core:Double>
        <core:Double>3.0</core:Double>
    </x:Array>

    <Style TargetType="DataGrid">
        <Setter Property="FontSize" Value="{StaticResource StdFontSize}"/>

    </Style>
    <Style x:Key="GlyphStyle" TargetType="Image">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>
    <CollectionViewSource x:Key="Filaments" Source="{Binding DefinedFilaments}"/>
    <x:Array x:Key="SupportedColors" Type="{x:Type core:String}">
        <core:String>White</core:String>
        <core:String>Black</core:String>
        <core:String>Cyan</core:String>
        <core:String>Violet</core:String>
        <core:String>Yellow</core:String>
        <core:String>Gray</core:String>
        <core:String>Red</core:String>
        <core:String>Lime</core:String>
        <core:String>Blue</core:String>
        <core:String>DarkGray</core:String>
        <core:String>Teal</core:String>
        <core:String>Purple</core:String>
        <core:String>Olive</core:String>
        <core:String>Maroon</core:String>
        <core:String>Green</core:String>
        <core:String>Navy</core:String>
        <core:String>Orange</core:String>
        <core:String>Gold</core:String>
        <core:String>Silver</core:String>
    </x:Array>
    <core:Double x:Key="StandardListViewHeight">
        350
    </core:Double>
    <helpers:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
    <BooleanToVisibilityConverter x:Key="VisibilityConverter"/>
    <helpers:EnhVisibilityConverter x:Key="EnhancedVisibilityConverter"/>
    <helpers:ColorFromNameConverter x:Key="ColorFromNameConverter"/>
    <helpers:BooleanInverterConverter x:Key="BooleanNotConverter"/>
    <helpers:WeightWithUnitsConverter x:Key="ConvertToMetricWeight"/>
    <helpers:LengthWithUnitsConverter x:Key="ConvertToMetricLength"/>
    <helpers:GridLengthValueConverter x:Key="GrdLengthVConverter"/>
    <DataGridLengthConverter x:Key="DataGridLenConverter"/>
    <helpers:LeakProofSettings x:Key="LeakPrfSettings"/>
    <helpers:HandleNullBoolean x:Key="HandleNullBoolean"/>
    <helpers:MultiBoolCombiner x:Key="MultiBoolConverter"/>
    <helpers:SplitAtUpperConverter x:Key="SplitAtUpperConverter"/>
    <helpers:EditStateToBooleanConverter x:Key="EditStateToBoolean"/>
    <helpers:EditStateToVisibilityConverter x:Key="EditStateToVisibility"/>
    <Style TargetType="CheckBox">
        <Setter Property="FontSize" Value="{StaticResource StdFontSize}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style TargetType="Label">
        <Setter Property="FontSize" Value="{StaticResource StdFontSize}"/>
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="Height" Value="{StaticResource StdTextBoxHeight}"/>
        <Setter Property="FontSize" Value="{StaticResource StdFontSize}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style x:Key="CommandButton" TargetType="Button">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style x:Key="IconCommandButton" TargetType="Button">
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Margin" Value="3,0,0,0"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5"/>
                <Setter Property="Background" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
        
    </Style>
    
    <Style x:Key="FontSymbolCommandButton" TargetType="Button">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="5,5,0,5"/>
    </Style>
    <Style x:Key="FontSymbolToggleButton" TargetType="ToggleButton">
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="FontSize" Value="8"/>
        <Setter Property="Margin" Value="5,5,0,5"/>
    </Style>
    <Style TargetType="GroupBox">
        <Setter Property="FontSize" Value="{StaticResource StdFontSize}"/>
    </Style>
    <Style TargetType="ComboBox">
        <Setter Property="FontSize" Value="{StaticResource StdFontSize}"/>
    </Style>
    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource StdFontSize}"/>
    </Style>
    <Style x:Key="StdDataGrid" TargetType="DataGrid">
        <Setter Property="FontSize" Value="{StaticResource StdFontSize}"/>
        <Setter Property="ToolTipService.IsEnabled" Value="True"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="FontIcon">
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
    </Style>

    <Style x:Key="EditCellStyleError" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DisplayCellStyleError" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="StdTagEditor" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="300"/>
        <Setter Property="Height" Value="90"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontSize" Value="{StaticResource StdFontSize}"/>
    </Style>
    <!--  <DataTemplate x:Key="EditLengthTemplate" DataType="{x:Type fila:ConvertLength}">
        <StackPanel>

            <TextBox Text="{Binding InputLength,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                     
                     Width="25"
                     Height="20"
                     ToolTip="Input length"/>

            <ComboBox ItemsSource="{StaticResource dataFromSupportedLength}"
                      SelectedItem="{Binding SupportedLength,Mode=TwoWay}"
                      Width="25"
                      Height="20"
                      ToolTip="Selected units">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding .,Converter={StaticResource EnumDescriptionConverter}}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>
    </DataTemplate>
    -->
    
        
   
    <DataTemplate x:Key="EditingIndicatorsHelp">
        <StackPanel>
            <TextBlock Text="{x:Static rsrc:Resources.DataEditingIndicatorsHeader}"/>
            <TextBlock >
                <Run Text="{x:Static rsrc:Resources.LegendHeader}"/>
                <Run Text="{x:Static rsrc:Resources.ColonHeader}"/>
            </TextBlock>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{StaticResource CheckSymbol}" Style="{StaticResource FontIcon}" ToolTip="{x:Static rsrc:Resources.RecordInDbTip}"/>
                <TextBlock Text="{x:Static rsrc:Resources.RecordInDbTip}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{StaticResource EditIconSymbol}" Style="{StaticResource FontIcon}"/>
                <TextBlock Text="{x:Static rsrc:Resources.NotInDbTip}"/>
                <!--<TextBlock Text="{x:Static rsrc:Resources.NotInDbTip}"/>-->
            </StackPanel>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="EditVendorDefn" DataType="{x:Type model:VendorDefn}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label       
                   Target="{Binding ElementName=NameEdit}">
                <Label.Content>
                    <TextBlock Text="{x:Static rsrc:Resources.NameHeader}"/>
                    <!--<TextBlock Text="{x:Static local:Constants.NameHeader}"/>-->
                </Label.Content>
            </Label>
            <TextBox Name="NameEdit"
                     Grid.Column="1"
                     Width="250"
                     Text="{Binding Name}"
                     HorizontalAlignment="Left"/>
            <Label Grid.Row="1"
                   
                   Target="{Binding ElementName=WebAddressEdit}">
                <Label.Content>
                    <TextBlock Text="{x:Static rsrc:Resources.WebAddressHeader}"/>
                    <!--<TextBlock Text="{x:Static local:Constants.WebAddressHeader}"/>-->
                </Label.Content>
            </Label>
            <TextBox x:Name="WebAddressEdit"
                     Grid.Row="1"
                     Grid.Column="1"
                     Width="250"
                     Text="{Binding WebUrl}"
                     HorizontalAlignment="Left"/>
            <CheckBox 
                      Grid.Row="2"
                      Grid.Column="1"
                      IsChecked="{Binding FoundOnAmazon}">
                <CheckBox.Content>
                    <TextBlock Text="{x:Static rsrc:Resources.FoundOnAmazonHeader}"/>
                    <!--<TextBlock Text="{x:Static local:Constants.FoundOnAmazonHeader}"/>-->
                </CheckBox.Content>
            </CheckBox>
            <!--<CheckBox
                      Grid.Row="3"
                      Grid.Column="1"
                      IsChecked="{Binding StopUsing}">
                <CheckBox.Content>
                    <TextBlock Text="{x:Static rsrc:Resources.StopUsingHeader}"/>
                    --><!--<TextBlock Text="{x:Static local:Constants.StopUsingHeader}"/>--><!--
                </CheckBox.Content>
            </CheckBox>-->
            <Label Content="Tags" Grid.Row="4"/>
            <TextBox x:Name="EditTags" 
                     Grid.Row="4"
                     Grid.Column="1"
                     Text="{Binding Tags}"
                     Style="{StaticResource StdTagEditor}"
                     HorizontalAlignment="Left"/>
            <TabControl Grid.Row="5"
                      Grid.ColumnSpan="2">
                <TabItem Header="{x:Static rsrc:Resources.SpoolDefinitionsHeader}">
                    <DataGrid ItemsSource="{Binding SpoolDefns}"
                      AutoGenerateColumns="False"
                      
                      CanUserDeleteRows="False"
                      Height="250"
                      
                      IsEnabled="{Binding StopUsing,Converter={StaticResource BooleanNotConverter}}" 
                      Style="{StaticResource StdDataGrid}">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.Header>
                                    <TextBlock Text="{x:Static rsrc:Resources.DEIHeader}">
                                        <TextBlock.ToolTip>
                                            <ContentControl ContentTemplate="{StaticResource EditingIndicatorsHelp}"/>
                                            <!--<StackPanel>
                                        <TextBlock Text="Data Editing Indicators"/>
                                        <TextBlock Text="Legend:"/>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{StaticResource CheckSymbol}" Style="{StaticResource FontIcon}"/>
                                            <TextBlock Text="record in database."/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{StaticResource EditIconSymbol}" Style="{StaticResource FontIcon}"/>
                                            <TextBlock Text="item needs to be saved to database."/>
                                        </StackPanel>
                                    </StackPanel>-->
                                        </TextBlock.ToolTip>
                                    </TextBlock>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{StaticResource CheckSymbol}"
                                           Style="{StaticResource FontIcon}"
                                           FontSize="12"
                                           Visibility="{Binding IsValid,Converter={StaticResource VisibilityConverter}}" 
                                               ToolTip="{x:Static rsrc:Resources.RecordInDbTip}"/>
                                            <TextBlock Text="{StaticResource EditIconSymbol}"
                                               Style="{StaticResource FontIcon}"
                                               FontSize="12"
                                               Visibility="{Binding IsModified,Converter={StaticResource VisibilityConverter}}" 
                                               ToolTip="{x:Static rsrc:Resources.RecordModifiedToolTip}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="{x:Static rsrc:Resources.DescriptionHeader}"
                                        Binding="{Binding Description}"
                                        Width="{Binding DescriptionColumnWidth,Source={StaticResource LeakPrfSettings},Mode=TwoWay}" >
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="TextBox">
                                        <Setter Property="MaxLength" Value="128"/>
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="{x:Static rsrc:Resources.DiameterHeader}"
                                        ToolTipService.ToolTip="{x:Static rsrc:Resources.SpoolDiameterToolTip}"
                                        Binding="{Binding SpoolDiameter,Converter={StaticResource ConvertToMetricLength},ConverterParameter='Millimeter'}"
                                        Width="{Binding DiameterColumnWidth,Source={StaticResource LeakPrfSettings},Mode=TwoWay}"/>
                            <DataGridTextColumn Binding="{Binding SpoolWidth,Converter={StaticResource ConvertToMetricLength},ConverterParameter='Millimeter'}"
                                        Header="{x:Static rsrc:Resources.WidthHeader}"
                                                ToolTipService.ToolTip="{x:Static rsrc:Resources.WidthToolTip}"
                                        Width="{Binding SpoolWidthColumnWidth,Source={StaticResource LeakPrfSettings},Mode=TwoWay}"/>

                            <DataGridTemplateColumn Header="{x:Static rsrc:Resources.DrumHeader}"
                                        ToolTipService.ToolTip="{x:Static rsrc:Resources.DrumDiameterToolTip}"
                                        Width="{Binding DrumDiameterColumnWidth,Source={StaticResource LeakPrfSettings},Mode=TwoWay}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DrumDiameter,Converter={StaticResource ConvertToMetricLength},ConverterParameter='Millimeter'}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBox Text="{Binding DrumDiameter,Converter={StaticResource ConvertToMetricLength},ConverterParameter='Millimeter'}"/>
                                            <ToggleButton x:Name="ShowDepth" Content="{StaticResource CalculatorSymbol}" Style="{StaticResource FontSymbolToggleButton}"/>
                                            <TextBlock Text="{x:Static rsrc:Resources.SpoolDepthHeader}" Visibility="{Binding ElementName=ShowDepth,Path=IsChecked,Mode=OneWay,Converter={StaticResource VisibilityConverter}}"/>
                                            <TextBox Text="{Binding SpoolDepth,Converter={StaticResource ConvertToMetricLength},ConverterParameter='Millimeter'}"
                                             Visibility="{Binding ElementName=ShowDepth,Path=IsChecked,Mode=OneWay,Converter={StaticResource VisibilityConverter}}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <!--<DataGridTextColumn Header="Depth"
                                        Binding="{Binding SpoolDepth,Mode=TwoWay,Converter={StaticResource ConvertToMetricLength},ConverterParameter='Millimeter'}"
                                        Width="75"/>-->


                            <!--<DataGridTextColumn Header="Max Depth"
                                        Binding="{Binding MaxDepth,Mode=OneWay,StringFormat='{}{0:#} mm'}"
                                        IsReadOnly="True"/>-->
                            <DataGridTextColumn Header="{x:Static rsrc:Resources.WeightHeader}"
                                        ToolTipService.ToolTip="{x:Static rsrc:Resources.WeightToolTip}"
                                        Binding="{Binding Weight,Converter={StaticResource ConvertToMetricWeight},ConverterParameter='Kilograms'}"
                                        Width="{Binding WeightColumnWidth,Source={StaticResource LeakPrfSettings},Mode=TwoWay}"/>
                            <DataGridCheckBoxColumn Header="{x:Static rsrc:Resources.StopUsingHeader}"
                                            ToolTipService.ToolTip="{x:Static rsrc:Resources.StopUsingToolTip}"
                                            Binding="{Binding StopUsing}"
                                            Width="{Binding StopUsingColumnWidth,Source={StaticResource LeakPrfSettings},Mode=TwoWay}"/>
                            <DataGridCheckBoxColumn Header="{x:Static rsrc:Resources.VerifiedHeader}"
                                            ToolTipService.ToolTip="{x:Static rsrc:Resources.VerifiedToolTip}"
                                            Binding="{Binding Verified}"
                                            Width="{Binding VerifiedColumnWidth,Source={StaticResource LeakPrfSettings},Mode=TwoWay}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
                <TabItem Header="{x:Static rsrc:Resources.FilamentsHeader}">
                    <DataGrid ItemsSource="{Binding VendorSettings}" 
                              AutoGenerateColumns="False" 
                              Style="{StaticResource StdDataGrid}">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.Header>
                                    <TextBlock Text="{x:Static rsrc:Resources.DEIHeader}">
                                        <TextBlock.ToolTip>
                                            <ContentControl ContentTemplate="{StaticResource EditingIndicatorsHelp}"/>
                                            <!--<StackPanel>
                                        <TextBlock Text="Data Editing Indicators"/>
                                        <TextBlock Text="Legend:"/>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{StaticResource CheckSymbol}" Style="{StaticResource FontIcon}"/>
                                            <TextBlock Text="record in database."/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{StaticResource EditIconSymbol}" Style="{StaticResource FontIcon}"/>
                                            <TextBlock Text="item needs to be saved to database."/>
                                        </StackPanel>
                                    </StackPanel>-->
                                        </TextBlock.ToolTip>
                                    </TextBlock>
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{StaticResource CheckSymbol}"
                                           Style="{StaticResource FontIcon}"
                                           FontSize="12"
                                           Visibility="{Binding IsValid,Converter={StaticResource VisibilityConverter}}" 
                                                        ToolTip="{x:Static rsrc:Resources.RecordInDbTip}"/>
                                            <TextBlock Text="{StaticResource EditIconSymbol}"
                                               Style="{StaticResource FontIcon}"
                                               FontSize="12"
                                               Visibility="{Binding IsModified,Converter={StaticResource VisibilityConverter}}" 
                                                       ToolTip="{x:Static rsrc:Resources.RecordModifiedToolTip}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="{x:Static rsrc:Resources.FilamentLabel}"
                                            Width="{Binding FilamentColumnWidth,Source={StaticResource LeakPrfSettings},Mode=TwoWay}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding FilamentDefn.MaterialType,Mode=OneWay}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding DataContext.Filaments, ElementName=MyPage}"
                                          SelectedItem="{Binding FilamentDefn,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate DataType="{x:Type model:FilamentDefn}">
                                                    <TextBlock >
                                                    <Run Text="{Binding MaterialType}"/>
                                                    <Run Text=" - "/>
                                                    <Run Text="{Binding FilamentDefnId}"/>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
            </TabControl>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="EditFilamentDefn" DataType="{x:Type model:FilamentDefn}">
        <Grid IsEnabled="{Binding CanEdit,Mode=OneWay}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label 
               Grid.Row="1">
                <Label.Content>
                    <TextBlock Text="{x:Static rsrc:Resources.FilamentTypeHeader}"/>
                </Label.Content>
            </Label>
            <ComboBox Grid.Row="1"
                  Grid.Column="2"
                  Margin="3"
                  Width="250"
                  HorizontalAlignment="Left"
                  ItemsSource="{Binding Source={StaticResource dataFromMaterialType}}"
                  SelectedItem="{Binding MaterialType}"
                  Background="{StaticResource StandardBackground}"
                      IsEnabled="{Binding CanEdit}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                        <Run Text="{Binding .,Mode=OneWay}"/>
                        <Run Text="{Binding . ,Converter={StaticResource  EnumDescriptionConverter},Mode=OneTime,StringFormat='({0})'}"/>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Label 
               Grid.Row="2"
               >
                <TextBlock Text="{x:Static rsrc:Resources.DiameterHeader}"/>
            </Label>
            <Label Grid.Row="3"
               >
                <TextBlock Text="{x:Static rsrc:Resources.DensityMeasurementTypeHeader}"/>
            </Label>
            <ComboBox 
                Grid.Row="2" 
                Grid.Column="1" 
                Margin="3"
                Width="100"
                HorizontalAlignment="Left"
                ItemsSource="{StaticResource FilamentDiameters}"
                SelectedValue="{Binding Diameter}"
                Background="{StaticResource StandardBackground}"
                IsEnabled="{Binding CanEdit}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding }"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <ComboBox Grid.Row="3"
                  Grid.Column="1"
                  Margin="3"
                  Width="150"
                  HorizontalAlignment="Left"
                  ItemsSource="{Binding Source={StaticResource dataFromDensityEditType}}"
                  SelectedItem="{Binding DensityAlias.DensityType,Mode=TwoWay}"
                  IsEnabled="{Binding CanEdit}"/>
            <CheckBox
                      Grid.Row="4"
                      Grid.Column="1"
                      IsChecked="{Binding StopUsing}"
                ToolTip="{x:Static rsrc:Resources.StopUsingToolTip}">
                <CheckBox.Content>
                    <TextBlock Text="{x:Static rsrc:Resources.StopUsingHeader}"/>
                </CheckBox.Content>
            </CheckBox>
            <GroupBox Header="Defined Density"
            Grid.Row="5"
            
            Grid.ColumnSpan="2"
            Visibility="{Binding DefinedDensityVisible,Converter={StaticResource VisibilityConverter}}"
                  Margin="5" Height="75">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="190"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Label >
                        <Label.Content>
                            <TextBlock Text="{x:Static rsrc:Resources.DensityHeader}"/>
                        </Label.Content></Label>
                    <TextBox Grid.Column="1"
                         Text="{Binding DensityAlias.DefinedDensity,Mode=TwoWay,UpdateSourceTrigger=LostFocus}"
                         IsEnabled="{Binding CanEdit}" ToolTip="{x:Static rsrc:Resources.DefinedDensityToolTip}"/>
                </Grid>
            </GroupBox>

            <DataGrid Grid.Row="6"
                  
                  Grid.ColumnSpan="2"
                  Style="{StaticResource StdDataGrid}"
                  ItemsSource="{Binding DensityAlias.MeasuredDensity}"
                  Visibility="{Binding MeasuredDensityVisible,Converter={StaticResource VisibilityConverter}}" AutoGenerateColumns="False"
                  IsEnabled="{Binding CanEdit}"
                  >
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Diameter,Converter={StaticResource ConvertToMetricLength},ConverterParameter='Millimeter',UpdateSourceTrigger=PropertyChanged}" 
                                        ClipboardContentBinding="{x:Null}" 
                                        Header="{x:Static rsrc:Resources.DiameterHeader}" 
                                        Width="100"/>
                    <DataGridTextColumn Binding="{Binding Length,Converter={StaticResource ConvertToMetricLength},ConverterParameter='Millimeter',UpdateSourceTrigger=PropertyChanged}" 
                                        ClipboardContentBinding="{x:Null}"
                                        Header="{x:Static rsrc:Resources.LengthHeader}" 
                                        Width="100"/>
                    <DataGridTextColumn Binding="{Binding Weight,Converter={StaticResource ConvertToMetricWeight},ConverterParameter='Grams',UpdateSourceTrigger=LostFocus}" 
                                        ClipboardContentBinding="{x:Null}" 
                                        Header="{x:Static rsrc:Resources.WeightHeader}" 
                                        Width="100"/>
                    <DataGridTextColumn Binding="{Binding DensityInGmPerCC}" 
                                        ClipboardContentBinding="{x:Null}" 
                                        Header="{x:Static rsrc:Resources.DensityInGmPerCCHeader}" 
                                        IsReadOnly="True" 
                                        Width="100"/>
                </DataGrid.Columns>
            </DataGrid>

            <GroupBox Header="{x:Static rsrc:Resources.AverageDensityHeader}"
                  Grid.Row="5"
                  Grid.ColumnSpan="2"
                  Visibility="{Binding MeasuredDensityVisible,Converter={StaticResource VisibilityConverter}}"
                  Margin="5" Height="75">
                <StackPanel>
                    <TextBlock>
                    <Run Text="{x:Static rsrc:Resources.AverageMeasuredDensityHeader}"/>
                    <Run Text="{Binding DensityAlias.Density, Mode=OneWay,StringFormat={}{0:#.#####}}"/>
                    </TextBlock>
                </StackPanel>
            </GroupBox>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="DisplayVendorDefnInListView" DataType="{x:Type model:VendorDefn}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Text="{StaticResource EditIconSymbol}"
                       FontFamily="Segoe UI Symbol"
                       FontSize="20" 
                       Foreground="Blue"
                       Visibility="{Binding IsModified,Converter={StaticResource VisibilityConverter}}"
                       VerticalAlignment="Center"/>
            <StackPanel Grid.Column="1">
                <TextBlock>
                <Run Text="{x:Static rsrc:Resources.NameHeader}"/>
                    <Run Text="{x:Static rsrc:Resources.ColonHeader}"/>
                <Run Text="{Binding Name,Mode=OneWay}"/>
                </TextBlock>
                <TextBlock ToolTip="{x:Static rsrc:Resources.WebAddressToolTip}">
                <Run Text="{x:Static rsrc:Resources.DisplayUrlHeader}"/>
                    <Hyperlink Command="{Binding DataContext.WebNavigate, ElementName=MyPage}" CommandParameter="{Binding WebUri,Mode=OneWay}">
                        <Run Text="{Binding WebUri,Mode=OneWay}"/>
                    </Hyperlink>
                </TextBlock>
                <CheckBox
                      IsChecked="{Binding FoundOnAmazon,Mode=OneWay}"
                      IsEnabled="False">
                    <CheckBox.Content>
                        <TextBlock Text="{x:Static rsrc:Resources.DisplayFoundOnAmazonHeader}"/>
                    </CheckBox.Content>
                </CheckBox>
                <Separator/>

            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="DisplayFilaDefnInList" DataType="{x:Type model:FilamentDefn}">
        <Grid ToolTip="{Binding MaterialType,Converter={StaticResource EnumDescriptionConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Text="{StaticResource EditIconSymbol}"
                       FontFamily="Segoe UI Symbol"
                       Visibility="{Binding IsModified,Converter={StaticResource VisibilityConverter}}"
                       FontSize="20"
                       Foreground="Blue"
                       VerticalAlignment="Center"/>

            <StackPanel Grid.Column="1">
                <TextBlock >
                    <Run Text="Material Type"
                         FontWeight="Bold"/>
                    <Run Text="{Binding MaterialType,Mode=OneWay}"/>
                </TextBlock>
                <TextBlock >
                    <Run Text="Diameter"
                         FontWeight="Bold"/>
                    <Run Text="{Binding Diameter,Converter={StaticResource ConvertToMetricLength},ConverterParameter='Millimeter',Mode=OneWay}"/>
                </TextBlock>
                <TextBlock ToolTip="grams per cubic centimeter"
                           >
                    <Run Text="Density"
                         FontWeight="Bold"/>
                    <Run Text="{Binding DensityAlias.Density,Mode=OneWay,StringFormat={}{0:#.###}}"/>
                </TextBlock>
                <TextBlock ToolTip="milligrams per mm"
                           >
                    <Run Text="mg/mm"
                         FontWeight="Bold"/>
                    <Run Text="{Binding MgPerMM,Mode=OneWay,StringFormat={}{0:#.###}}"/>
                </TextBlock>
                <Separator />
            </StackPanel>
        </Grid>
    </DataTemplate>
    <HierarchicalDataTemplate x:Key="DisplayByFilament" DataType="{x:Type model:FilamentDefn}">
        <StackPanel>
            <TextBlock Text="{Binding MaterialType}"/>



            <StackPanel.ToolTip>

                <StackPanel>
                    <TextBlock>
                            <Run Text="Filament"/>
                            <Run Text="{Binding MaterialType}"/>
                    </TextBlock>
                    <TextBlock >
                            <Run Text="Diameter"/>
                            <Run Text="{Binding Diameter}"/>
                    </TextBlock>
                    <TextBlock>
                                    <Run Text="Density"/>
                                    <Run Text="{Binding DensityAlias.Density,Mode=OneWay}"/>
                    </TextBlock>
                    <TextBlock>
                                    <Run Text="mg/mm"/>
                                    <Run Text="{Binding MgPerMM,Mode=OneWay,StringFormat={}{0:#.#####}}"/>
                    </TextBlock>
                </StackPanel>
            </StackPanel.ToolTip>
        </StackPanel>
    </HierarchicalDataTemplate>
    <DataTemplate x:Key="EditInventorySpoolItems" DataType="{x:Type model:InventorySpool}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Text="Date Opened"/>
            <TextBlock Text="{Binding DateOpened,StringFormat={}{0:d}}"
                       Grid.Column="1"/>
            <TextBlock Text="Color"
                       Grid.Row="1" VerticalAlignment="Center"/>
            <StackPanel Orientation="Horizontal" Grid.Column="1"
                       Grid.Row="1">
                <Rectangle Fill="{Binding ColorName,Converter={StaticResource ColorFromNameConverter}}" Width="50"/>
                <TextBlock Text="{Binding ColorName,Converter={StaticResource SplitAtUpperConverter}}" Margin="3,0,0,0"/>
            </StackPanel>
            <TextBlock Text="Material"
                       Grid.Row="2"/>
            <TextBlock Grid.Row="2"
                       Grid.Column="1">
                <Run Text="{Binding FilamentDefn.MaterialType}"/>
                <Run Text=" - "/>
                <Run Text="{Binding FilamentDefn.FilamentDefnId}"/>
            </TextBlock>
            <TextBlock Grid.Row="3"
                       Text="Initial starting length"/>
            <TextBlock Grid.Row="3"
                       Grid.Column="1">
                <Run Text="{Binding InitialLength,Mode=OneWay,StringFormat='{}{0:#}'}"/>
                <Run Text="m"/>
            </TextBlock>
            <TextBlock Grid.Row="4">
                <Run Text="Maximum Depth"/>
                <!--<Run Text="{Binding SpoolDefn.MaxDepth,Mode=OneWay}"/>-->
            </TextBlock>
            <TextBlock Grid.Row="4"
                       Grid.Column="1"
                       Text="{Binding SpoolDefn.MaxDepth,Mode=OneWay,StringFormat='{}{0:#.### mm}'}"/>
            <TextBlock Text="Measurements"
                       Grid.Row="5"/>
            <DataGrid ItemsSource="{Binding DepthMeasurements}"
                      Grid.Row="5"
                      Grid.ColumnSpan="2"
                      AutoGenerateColumns="False"
                      CanUserDeleteRows="False"
                      Style="{StaticResource StdDataGrid}"
                      IsEnabled="{Binding StopUsing,Converter={StaticResource BooleanNotConverter}}">
                <DataGrid.Columns>
                    <DataGridTemplateColumn >
                        <DataGridTemplateColumn.Header>
                            <TextBlock Text="DEI">
                                <TextBlock.ToolTip>
                                    <ContentControl ContentTemplate="{StaticResource EditingIndicatorsHelp}"/>
                                    <!--<StackPanel>
                                        <TextBlock Text="Data Editing Indicators"/>
                                        <TextBlock Text="Legend:"/>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{StaticResource CheckSymbol}" Style="{StaticResource FontIcon}"/>
                                            <TextBlock Text="record in database."/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{StaticResource EditIconSymbol}" Style="{StaticResource FontIcon}"/>
                                            <TextBlock Text="item needs to be saved to database."/>
                                        </StackPanel>
                                    </StackPanel>-->
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{StaticResource CheckSymbol}"
                                           Style="{StaticResource FontIcon}"
                                           FontSize="12"
                                           Visibility="{Binding IsValid,Converter={StaticResource EnhancedVisibilityConverter}}"/>
                                    <TextBlock Text="{StaticResource EditIconSymbol}"
                                               Style="{StaticResource FontIcon}"
                                               FontSize="12"
                                               Visibility="{Binding IsModified,Converter={StaticResource EnhancedVisibilityConverter}}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Width="{Binding MeasuredOnColumnWidth,Source={StaticResource LeakPrfSettings},Mode=TwoWay}"
                                            Header="Measured On">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding MeasureDateTime,StringFormat={}{0:d}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding MeasureDateTime,Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Width="{Binding DepthLeftColumnWidth,Source={StaticResource LeakPrfSettings},Mode=TwoWay}"
                                        Header="Depth Left"
                                        Binding="{Binding Depth1,Converter={StaticResource ConvertToMetricLength},ConverterParameter='Millimeter',Mode=TwoWay,UpdateSourceTrigger=LostFocus}"/>
                    <DataGridTextColumn Width="{Binding DepthRightColumnWidth,Source={StaticResource LeakPrfSettings},Mode=TwoWay}"
                                        Header="Depth Right"
                                        Binding="{Binding Depth2,Converter={StaticResource ConvertToMetricLength},ConverterParameter='Millimeter',Mode=TwoWay,UpdateSourceTrigger=LostFocus}"/>
                    <DataGridTextColumn Width="{Binding RemainingGColumnWidth,Source={StaticResource LeakPrfSettings},Mode=TwoWay}"
                                        Header="Remaining (g)"
                                        Binding="{Binding FilamentRemainingInGrams,Mode=OneWay,StringFormat='{}{0:#} g'}"
                                        IsReadOnly="True"
                                        ToolTipService.ToolTip="Amount remaining in grams."/>
                    <DataGridTextColumn Width="{Binding RemainingMColumnWidth,Source={StaticResource LeakPrfSettings},Mode=TwoWay}"
                                        Header="Remaining (m)"
                                        Binding="{Binding FilamentRemainingInMeters,Mode=OneWay,StringFormat='{}{0:#} m'}"
                                        IsReadOnly="True"
                                        ToolTipService.ToolTip="Amount remaining in meters"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="NoEditorTemplate">
        <TextBlock Text="No Editor Defined"
                   FontSize="24"/>
    </DataTemplate>

</ResourceDictionary>