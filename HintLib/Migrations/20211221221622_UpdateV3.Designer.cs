// <auto-generated />
using HintLib.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HintLib.Migrations
{
    [DbContext(typeof(HintContext))]
    [Migration("20211221221622_UpdateV3")]
    partial class UpdateV3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HintLib.Hint", b =>
                {
                    b.Property<int>("HintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HintId"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HintDataId")
                        .HasColumnType("int");

                    b.Property<int>("SavedCrc")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HintId");

                    b.HasIndex("HintDataId");

                    b.ToTable("Hints");
                });

            modelBuilder.Entity("HintLib.HintProject", b =>
                {
                    b.Property<int>("HintProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HintProjectId"), 1L, 1);

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SavedCrc")
                        .HasColumnType("int");

                    b.HasKey("HintProjectId");

                    b.ToTable("HintProjects");
                });

            modelBuilder.Entity("HintLib.ProjectFilename", b =>
                {
                    b.Property<int>("ProjectFilenameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectFilenameId"), 1L, 1);

                    b.Property<string>("HintProjectFilename")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("HintProjectId")
                        .HasColumnType("int");

                    b.Property<int>("SavedCrc")
                        .HasColumnType("int");

                    b.HasKey("ProjectFilenameId");

                    b.HasIndex("HintProjectId");

                    b.ToTable("ProjectFilenames");
                });

            modelBuilder.Entity("HintLib.Hint", b =>
                {
                    b.HasOne("HintLib.HintProject", "HintData")
                        .WithMany("Data")
                        .HasForeignKey("HintDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HintData");
                });

            modelBuilder.Entity("HintLib.ProjectFilename", b =>
                {
                    b.HasOne("HintLib.HintProject", "HintProject")
                        .WithMany("ProjectFilenames")
                        .HasForeignKey("HintProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HintProject");
                });

            modelBuilder.Entity("HintLib.HintProject", b =>
                {
                    b.Navigation("Data");

                    b.Navigation("ProjectFilenames");
                });
#pragma warning restore 612, 618
        }
    }
}
